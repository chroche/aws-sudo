[test-plain]
aws_access_key_id = AKIAIAAB6R3NQ5KOPILQ
aws_secret_access_key = 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

[test-role]
source_profile = test-plain
role_arn = arn:aws:iam::281453448572:role/test-assume-role

[test-mfa]
aws_access_key_id = AKIAJSSZX7QBX5JMD2ZQ
aws_secret_access_key = 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
mfa_serial = arn:aws:iam::281453448572:mfa/aws-sudo.test-mfa

[test-mfa-role-source]
aws_access_key_id = AKIAIILYFX2XK3HDDMYQ
aws_secret_access_key = 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
mfa_serial = arn:aws:iam::281453448572:mfa/aws-sudo.test-mfa-role

[test-role-mfa]
source_profile = test-mfa-role-source
role_arn = arn:aws:iam::281453448572:role/test-assume-role-mfa
mfa_serial = arn:aws:iam::281453448572:mfa/aws-sudo.test-mfa-role

[just-source]
source_profile = test-plain

[self-update]
aws_access_key_id = AKIAIAAB6R3NQ5KOPILQ
aws_secret_access_key = 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
